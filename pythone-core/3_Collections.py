"""
* Списки -упорядоченная изменяемая колекция объектов (List в Java)
* Словари - неупорядоченное множество пар key/value (Map в Java )
* Кортеж - упорядоченная не изменяемая коллекция объектов (Array в Java)
* Множество - неупорядоченный набор неповторяющихся объектов (Set в Java)

* []-пустой список
* {} - пустой словарь
* set() - пустое множество, т.к. фигурные скобки уже используются для словарей
* () - пустой кортеж
"""
# СПИСКИ, создание
empty_list = list()
list1= ['Toyota', 'RAV4', 2.2, 60807]
list2 = [[1, 2, 3], ['a', 'b', 'c'], ['One', 'Two', 'Three']]
list3 = list('cat')               # ['c', 'a', 't'] преобразования строки в список
list4 = list(('c', 'a', 't'))     # ['c', 'a', 't'] преобразования кортежа в список
list5 = 'q/w/e/r/t/y'.split('/')  # ['q', 'w', 'e', 'r', 't', 'y']
print(list5)

# извлечение
var = list1[0]     # 'Toyota'
var = list2[1][1]  # 'b'
list6 = list1[0:2] # извлечь часть списка ['Toyota', 'RAV4']
print(list6)

list1.append('a')     # добавить в конец
list1.extend([3, 4])  # добавить коллекцию к списку
list1.insert(0, 1)    # добавить по индексу, перед который будет вставка 1
list1.pop()           # удалить с конца, возвращает удалённый объект
list1.pop(1)          # удалить по индексу, возвращает удалённый объект. Ошибка, если несуществующий индекс или список пуст
del list1[1]          # del является оператором Python, а не методом списка. Он похож на противоположную присваиванию (=) операцию: открепляет имя от объекта Python
list1.remove('RAV4')  # удалить по значению
print(list1)

print(list1)

# КОРТЕЖИ
array = ('ready', 'fire', 'aim')

